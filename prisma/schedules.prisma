model Employee {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  contractType  ContractType // CDI ou CDD
  startDate     DateTime
  endDate       DateTime? // NULL pour CDI
  
  // Relation vers les configurations d'horaires
  schedules     WorkSchedule[]
  leaves        Leave[]
  timeEntries   TimeEntry[] // Les pointages
}

model WorkSchedule {
  id          String   @id @default(cuid())
  employeeId  String
  employee    Employee @relation(fields: [employeeId], references: [id])
  
  // Période de validité de cet horaire
  startDate   DateTime
  endDate     DateTime? // NULL = toujours valide
  
  // Configuration hebdomadaire
  monday      WorkDay?
  tuesday     WorkDay?
  wednesday   WorkDay?
  thursday    WorkDay?
  friday      WorkDay?
  saturday    WorkDay?
  sunday      WorkDay?
}

// Type composite ou table séparée
model WorkDay {
  id             String       @id @default(cuid())
  scheduleId     String
  schedule       WorkSchedule @relation(fields: [scheduleId], references: [id])
  dayOfWeek      Int          // 1=Lundi, 7=Dimanche
  isWorking      Boolean
  morningStart   String?      // "09:00"
  morningEnd     String?      // "12:00"
  afternoonStart String?      // "14:00"
  afternoonEnd   String?      // "18:00"
}

model Leave {
  id          String    @id @default(cuid())
  employeeId  String
  employee    Employee  @relation(fields: [employeeId], references: [id])
  leaveType   LeaveType // CP, RTT, Maladie, etc.
  startDate   DateTime
  endDate     DateTime
  status      LeaveStatus // Pending, Approved, Rejected
  halfDayStart Boolean  @default(false) // Demi-journée début
  halfDayEnd   Boolean  @default(false) // Demi-journée fin
}

model TimeEntry {
  id         String   @id @default(cuid())
  employeeId String
  employee   Employee @relation(fields: [employeeId], references: [id])
  date       DateTime @db.Date
  checkIn    DateTime?
  checkOut   DateTime?
}

enum ContractType {
  CDI
  CDD
  INTERIM
  STAGE
}

enum LeaveType {
  CP
  RTT
  MALADIE
  SANS_SOLDE
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}