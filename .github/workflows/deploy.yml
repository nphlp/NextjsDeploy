name: CI/CD Pipeline

on:
    push:
        branches: [main, test]

jobs:
    # commit:
    #     name: Commit Check
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v4
    #         - uses: wagoid/commitlint-github-action@v6

    # setup-base:
    #     name: Setup dependencies
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v4
    #         - uses: ./.github/actions/setup-base

    # lint:
    #     name: Lint check
    #     runs-on: ubuntu-latest
    #     needs: [commit, setup-base]
    #     steps:
    #         - uses: actions/checkout@v4
    #         - uses: ./.github/actions/setup-base
    #         - uses: ./.github/actions/quality-check
    #           with:
    #               check-type: lint
    # format:
    #     name: Format check
    #     runs-on: ubuntu-latest
    #     needs: [commit, setup-base]
    #     steps:
    #         - uses: actions/checkout@v4
    #         - uses: ./.github/actions/setup-base
    #         - uses: ./.github/actions/quality-check
    #           with:
    #               check-type: format
    # type:
    #     name: Type check
    #     runs-on: ubuntu-latest
    #     needs: [commit, setup-base]
    #     steps:
    #         - uses: actions/checkout@v4
    #         - uses: ./.github/actions/setup-base
    #         - uses: ./.github/actions/quality-check
    #           with:
    #               check-type: type

    deploy-preview:
        if : github.ref == 'refs/heads/test'
        name: Deploy Preview
        runs-on: ubuntu-latest
        # needs: [lint, format, type]
        environment: preview
        steps:
            # Deploy vers Portainer
            - name: Trigger Portainer Deploy Preview
              run: curl -X POST "${{ secrets.PORTAINER_WEBHOOK_PREVIEW }}"

    deploy-production:
        if : github.ref == 'refs/heads/main'
        name: Deploy Production
        runs-on: ubuntu-latest
        # needs: [lint, format, type]
        environment: production
        steps:
            # # Setup
            # - uses: actions/checkout@v4
            # - uses: ./.github/actions/setup-base

            # # Release avec semantic-release
            # - name: Create release
            #   run: pnpm dlx semantic-release
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Deploy vers Portainer
            - name: Trigger Portainer Deploy Production
              run: curl -X POST "${{ secrets.PORTAINER_WEBHOOK_PRODUCTION }}"
