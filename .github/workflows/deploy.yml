name: CI/CD Pipeline

on:
    push:
        branches: [main]

jobs:
    commit:
        name: Commit Check
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: wagoid/commitlint-github-action@v6

    setup-base:
        name: Setup dependencies
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/setup-base

    lint:
        name: Lint check
        runs-on: ubuntu-latest
        needs: [commit, setup-base]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/setup-base
            - uses: ./.github/actions/quality-check
              with:
                  check-type: lint
    format:
        name: Format check
        runs-on: ubuntu-latest
        needs: [commit, setup-base]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/setup-base
            - uses: ./.github/actions/quality-check
              with:
                  check-type: format
    type:
        name: Type check
        runs-on: ubuntu-latest
        needs: [commit, setup-base]
        steps:
            - uses: actions/checkout@v4
            - uses: ./.github/actions/setup-base
            - uses: ./.github/actions/quality-check
              with:
                  check-type: type

#     deploy-production:
#         name: Deploy Production
#         runs-on: ubuntu-latest
#         needs: [lint, format, type]
#         environment: production
#         steps:
#             # Setup
#             - uses: actions/checkout@v4
#             - uses: ./.github/actions/setup-base
            
#             # Release avec semantic-release
#             - name: Create release
#               run: pnpm dlx semantic-release
#               env:
#                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
#             # Deploy vers Coolify
#             - name: Trigger Coolify Deploy Production
#               run: |
#                   curl -X GET "${{ secrets.COOLIFY_API_URL }}/api/v1/deploy?uuid=${{ secrets.COOLIFY_ECO_SERVICE_UUID }}&force=false&branch=main" \
#                       -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}"
