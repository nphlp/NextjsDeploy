import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";

/**
 * # WorkDay Type Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/types/{{model}}Type.hbs` as base template
 * - to generate types files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ============== Utils ============== //

type Payload = Prisma.$WorkDayPayload<InternalArgs>;

type Flatten<T> = T extends infer U ? { [K in keyof U]: U[K] } : never;

// ============== Model ============== //

/**
 * WorkDay native fields only
 */
export type WorkDayModel = Flatten<Payload["scalars"]>;

/**
 * WorkDay relations fields only
 */
export type WorkDayRelations = {
    [K in keyof Payload["objects"]]: Payload["objects"][K] extends Array<infer T>
        ? T extends { scalars: unknown }
            ? Flatten<T["scalars"]>[]
            : never
        : Payload["objects"][K] extends { scalars: unknown }
          ? Flatten<Payload["objects"][K]["scalars"]>
          : never;
};

/**
 * WorkDay native and relations fields
 */
export type WorkDayComplete = Flatten<WorkDayModel & WorkDayRelations>;

/**
 * WorkDay count type
 */
export type WorkDayCount = number;

// ========== Types ========== //

/**
 * WorkDay Create props
 */
export type WorkDayCreateProps<T extends Prisma.WorkDayCreateArgs = Prisma.WorkDayCreateArgs> = Prisma.SelectSubset<
    T,
    Prisma.WorkDayCreateArgs
>;

/**
 * WorkDay Create response
 */
export type WorkDayCreateResponse<T extends Prisma.WorkDayCreateArgs = Prisma.WorkDayCreateArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "create",
    PrismaClientOptions
>;

/**
 * WorkDay Upsert props
 */
export type WorkDayUpsertProps<T extends Prisma.WorkDayUpsertArgs = Prisma.WorkDayUpsertArgs> = Prisma.SelectSubset<
    T,
    Prisma.WorkDayUpsertArgs
>;

/**
 * WorkDay Upsert response
 */
export type WorkDayUpsertResponse<T extends Prisma.WorkDayUpsertArgs = Prisma.WorkDayUpsertArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "upsert",
    PrismaClientOptions
>;

/**
 * WorkDay Update props
 */
export type WorkDayUpdateProps<T extends Prisma.WorkDayUpdateArgs = Prisma.WorkDayUpdateArgs> = Prisma.SelectSubset<
    T,
    Prisma.WorkDayUpdateArgs
>;

/**
 * WorkDay Update response
 */
export type WorkDayUpdateResponse<T extends Prisma.WorkDayUpdateArgs = Prisma.WorkDayUpdateArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "update",
    PrismaClientOptions
>;

/**
 * WorkDay Delete props
 */
export type WorkDayDeleteProps<T extends Prisma.WorkDayDeleteArgs = Prisma.WorkDayDeleteArgs> = Prisma.SelectSubset<
    T,
    Prisma.WorkDayDeleteArgs
>;

/**
 * WorkDay Delete response
 */
export type WorkDayDeleteResponse<T extends Prisma.WorkDayDeleteArgs = Prisma.WorkDayDeleteArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "delete",
    PrismaClientOptions
>;

/**
 * WorkDay Create Many props
 */
export type WorkDayCreateManyProps<T extends Prisma.WorkDayCreateManyArgs = Prisma.WorkDayCreateManyArgs> =
    Prisma.SelectSubset<T, Prisma.WorkDayCreateManyArgs>;

/**
 * WorkDay Create Many response
 */
export type WorkDayCreateManyResponse = Prisma.BatchPayload;

/**
 * WorkDay Update Many props
 */
export type WorkDayUpdateManyProps<T extends Prisma.WorkDayUpdateManyArgs = Prisma.WorkDayUpdateManyArgs> =
    Prisma.SelectSubset<T, Prisma.WorkDayUpdateManyArgs>;

/**
 * WorkDay Update Many response
 */
export type WorkDayUpdateManyResponse = Prisma.BatchPayload;

/**
 * WorkDay Delete Many props
 */
export type WorkDayDeleteManyProps<T extends Prisma.WorkDayDeleteManyArgs = Prisma.WorkDayDeleteManyArgs> =
    Prisma.SelectSubset<T, Prisma.WorkDayDeleteManyArgs>;

/**
 * WorkDay Delete Many response
 */
export type WorkDayDeleteManyResponse = Prisma.BatchPayload;

/**
 * WorkDay Find First props
 */
export type WorkDayFindFirstProps<T extends Prisma.WorkDayFindFirstArgs = Prisma.WorkDayFindFirstArgs> =
    Prisma.SelectSubset<T, Prisma.WorkDayFindFirstArgs>;

/**
 * WorkDay Find First response
 */
export type WorkDayFindFirstResponse<T extends Prisma.WorkDayFindFirstArgs = Prisma.WorkDayFindFirstArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

/**
 * WorkDay Find Unique props
 */
export type WorkDayFindUniqueProps<T extends Prisma.WorkDayFindUniqueArgs = Prisma.WorkDayFindUniqueArgs> =
    Prisma.SelectSubset<T, Prisma.WorkDayFindUniqueArgs>;

/**
 * WorkDay Find Unique response
 */
export type WorkDayFindUniqueResponse<T extends Prisma.WorkDayFindUniqueArgs = Prisma.WorkDayFindUniqueArgs> =
    GetResult<Prisma.$WorkDayPayload<InternalArgs>, T, "findUnique", PrismaClientOptions>;

/**
 * WorkDay Find Many props
 */
export type WorkDayFindManyProps<T extends Prisma.WorkDayFindManyArgs = Prisma.WorkDayFindManyArgs> =
    Prisma.SelectSubset<T, Prisma.WorkDayFindManyArgs>;

/**
 * WorkDay Find Many response
 */
export type WorkDayFindManyResponse<T extends Prisma.WorkDayFindManyArgs = Prisma.WorkDayFindManyArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

/**
 * WorkDay Count props
 */
export type WorkDayCountProps<T extends Prisma.WorkDayCountArgs = Prisma.WorkDayCountArgs> = Prisma.SelectSubset<
    T,
    Prisma.WorkDayCountArgs
>;

/**
 * WorkDay Count response
 */
export type WorkDayCountResponse<T extends Prisma.WorkDayCountArgs = Prisma.WorkDayCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.WorkDayCountAggregateOutputType>
        : number;
