import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";

/**
 * # WorkSchedule Type Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/types/{{model}}Type.hbs` as base template
 * - to generate types files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ============== Utils ============== //

type Payload = Prisma.$WorkSchedulePayload<InternalArgs>;

type Flatten<T> = T extends infer U ? { [K in keyof U]: U[K] } : never;

// ============== Model ============== //

/**
 * WorkSchedule native fields only
 */
export type WorkScheduleModel = Flatten<Payload["scalars"]>;

/**
 * WorkSchedule relations fields only
 */
export type WorkScheduleRelations = {
    [K in keyof Payload["objects"]]: Payload["objects"][K] extends Array<infer T>
        ? T extends { scalars: unknown }
            ? Flatten<T["scalars"]>[]
            : never
        : Payload["objects"][K] extends { scalars: unknown }
          ? Flatten<Payload["objects"][K]["scalars"]>
          : never;
};

/**
 * WorkSchedule native and relations fields
 */
export type WorkScheduleComplete = Flatten<WorkScheduleModel & WorkScheduleRelations>;

/**
 * WorkSchedule count type
 */
export type WorkScheduleCount = number;

// ========== Types ========== //

/**
 * WorkSchedule Create props
 */
export type WorkScheduleCreateProps<T extends Prisma.WorkScheduleCreateArgs = Prisma.WorkScheduleCreateArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleCreateArgs>;

/**
 * WorkSchedule Create response
 */
export type WorkScheduleCreateResponse<T extends Prisma.WorkScheduleCreateArgs = Prisma.WorkScheduleCreateArgs> =
    GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "create", PrismaClientOptions>;

/**
 * WorkSchedule Upsert props
 */
export type WorkScheduleUpsertProps<T extends Prisma.WorkScheduleUpsertArgs = Prisma.WorkScheduleUpsertArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleUpsertArgs>;

/**
 * WorkSchedule Upsert response
 */
export type WorkScheduleUpsertResponse<T extends Prisma.WorkScheduleUpsertArgs = Prisma.WorkScheduleUpsertArgs> =
    GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "upsert", PrismaClientOptions>;

/**
 * WorkSchedule Update props
 */
export type WorkScheduleUpdateProps<T extends Prisma.WorkScheduleUpdateArgs = Prisma.WorkScheduleUpdateArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleUpdateArgs>;

/**
 * WorkSchedule Update response
 */
export type WorkScheduleUpdateResponse<T extends Prisma.WorkScheduleUpdateArgs = Prisma.WorkScheduleUpdateArgs> =
    GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "update", PrismaClientOptions>;

/**
 * WorkSchedule Delete props
 */
export type WorkScheduleDeleteProps<T extends Prisma.WorkScheduleDeleteArgs = Prisma.WorkScheduleDeleteArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleDeleteArgs>;

/**
 * WorkSchedule Delete response
 */
export type WorkScheduleDeleteResponse<T extends Prisma.WorkScheduleDeleteArgs = Prisma.WorkScheduleDeleteArgs> =
    GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "delete", PrismaClientOptions>;

/**
 * WorkSchedule Create Many props
 */
export type WorkScheduleCreateManyProps<
    T extends Prisma.WorkScheduleCreateManyArgs = Prisma.WorkScheduleCreateManyArgs,
> = Prisma.SelectSubset<T, Prisma.WorkScheduleCreateManyArgs>;

/**
 * WorkSchedule Create Many response
 */
export type WorkScheduleCreateManyResponse = Prisma.BatchPayload;

/**
 * WorkSchedule Update Many props
 */
export type WorkScheduleUpdateManyProps<
    T extends Prisma.WorkScheduleUpdateManyArgs = Prisma.WorkScheduleUpdateManyArgs,
> = Prisma.SelectSubset<T, Prisma.WorkScheduleUpdateManyArgs>;

/**
 * WorkSchedule Update Many response
 */
export type WorkScheduleUpdateManyResponse = Prisma.BatchPayload;

/**
 * WorkSchedule Delete Many props
 */
export type WorkScheduleDeleteManyProps<
    T extends Prisma.WorkScheduleDeleteManyArgs = Prisma.WorkScheduleDeleteManyArgs,
> = Prisma.SelectSubset<T, Prisma.WorkScheduleDeleteManyArgs>;

/**
 * WorkSchedule Delete Many response
 */
export type WorkScheduleDeleteManyResponse = Prisma.BatchPayload;

/**
 * WorkSchedule Find First props
 */
export type WorkScheduleFindFirstProps<T extends Prisma.WorkScheduleFindFirstArgs = Prisma.WorkScheduleFindFirstArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleFindFirstArgs>;

/**
 * WorkSchedule Find First response
 */
export type WorkScheduleFindFirstResponse<
    T extends Prisma.WorkScheduleFindFirstArgs = Prisma.WorkScheduleFindFirstArgs,
> = GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "findFirst", PrismaClientOptions>;

/**
 * WorkSchedule Find Unique props
 */
export type WorkScheduleFindUniqueProps<
    T extends Prisma.WorkScheduleFindUniqueArgs = Prisma.WorkScheduleFindUniqueArgs,
> = Prisma.SelectSubset<T, Prisma.WorkScheduleFindUniqueArgs>;

/**
 * WorkSchedule Find Unique response
 */
export type WorkScheduleFindUniqueResponse<
    T extends Prisma.WorkScheduleFindUniqueArgs = Prisma.WorkScheduleFindUniqueArgs,
> = GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "findUnique", PrismaClientOptions>;

/**
 * WorkSchedule Find Many props
 */
export type WorkScheduleFindManyProps<T extends Prisma.WorkScheduleFindManyArgs = Prisma.WorkScheduleFindManyArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleFindManyArgs>;

/**
 * WorkSchedule Find Many response
 */
export type WorkScheduleFindManyResponse<T extends Prisma.WorkScheduleFindManyArgs = Prisma.WorkScheduleFindManyArgs> =
    GetResult<Prisma.$WorkSchedulePayload<InternalArgs>, T, "findMany", PrismaClientOptions>;

/**
 * WorkSchedule Count props
 */
export type WorkScheduleCountProps<T extends Prisma.WorkScheduleCountArgs = Prisma.WorkScheduleCountArgs> =
    Prisma.SelectSubset<T, Prisma.WorkScheduleCountArgs>;

/**
 * WorkSchedule Count response
 */
export type WorkScheduleCountResponse<T extends Prisma.WorkScheduleCountArgs = Prisma.WorkScheduleCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.WorkScheduleCountAggregateOutputType>
        : number;
