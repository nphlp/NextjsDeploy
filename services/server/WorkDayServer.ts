import { Prisma } from "@prisma/client";
import { GetResult, InternalArgs, PrismaClientOptions } from "@prisma/client/runtime/library";
import {
    WorkDayCountCached,
    WorkDayFindFirstCached,
    WorkDayFindManyCached,
    WorkDayFindUniqueCached,
} from "@services/cached";

/**
 * # WorkDay Server Services
 *
 * This file:
 * - is generated by the command `pnpm run generate:all`
 * - that executes the script: `scripts/generator.ts`
 * - which uses `template/services/server/{{model}}Server.hbs` as base template
 * - to generate server function files for every models available in the `prisma/client/index.d.ts`.
 *
 * > **Warning**: Do not edit this file directly. Your changes will be lost the next time the code is generated.
 */

// ========== Types ========== //

// Find First
type WorkDayFindFirstProps<T extends Prisma.WorkDayFindFirstArgs> = Prisma.SelectSubset<T, Prisma.WorkDayFindFirstArgs>;
type WorkDayFindFirstResponse<T extends Prisma.WorkDayFindFirstArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "findFirst",
    PrismaClientOptions
>;

// Find Unique
type WorkDayFindUniqueProps<T extends Prisma.WorkDayFindUniqueArgs> = Prisma.SelectSubset<
    T,
    Prisma.WorkDayFindUniqueArgs
>;
type WorkDayFindUniqueResponse<T extends Prisma.WorkDayFindUniqueArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "findUnique",
    PrismaClientOptions
>;

// Find Many
type WorkDayFindManyProps<T extends Prisma.WorkDayFindManyArgs> = Prisma.SelectSubset<T, Prisma.WorkDayFindManyArgs>;
type WorkDayFindManyResponse<T extends Prisma.WorkDayFindManyArgs> = GetResult<
    Prisma.$WorkDayPayload<InternalArgs>,
    T,
    "findMany",
    PrismaClientOptions
>;

// Count
type WorkDayCountProps<T extends Prisma.WorkDayCountArgs> = Prisma.SelectSubset<T, Prisma.WorkDayCountArgs>;
type WorkDayCountResponse<T extends Prisma.WorkDayCountArgs> =
    // eslint-disable-next-line
    T extends { select: any }
        ? T["select"] extends true
            ? number
            : Prisma.GetScalarType<T["select"], Prisma.WorkDayCountAggregateOutputType>
        : number;

// ========== Services ========== //

/**
 * ## WorkDay Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const WorkDayFindFirstServer = async <T extends Prisma.WorkDayFindFirstArgs>(
    params: WorkDayFindFirstProps<T>,
): Promise<WorkDayFindFirstResponse<T>> => {
    return await WorkDayFindFirstCached(params);
};

/**
 * ## WorkDay Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const WorkDayFindUniqueServer = async <T extends Prisma.WorkDayFindUniqueArgs>(
    params: WorkDayFindUniqueProps<T>,
): Promise<WorkDayFindUniqueResponse<T>> => {
    return await WorkDayFindUniqueCached(params);
};

/**
 * ## WorkDay Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const WorkDayFindManyServer = async <T extends Prisma.WorkDayFindManyArgs>(
    params: WorkDayFindManyProps<T>,
): Promise<WorkDayFindManyResponse<T>> => {
    return await WorkDayFindManyCached(params);
};

/**
 * ## WorkDay Find (Server)
 *
 * - SSG compatible
 * - cached function
 *
 * **Note**: function generated from template.
 */
export const WorkDayCountServer = async <T extends Prisma.WorkDayCountArgs>(
    params: WorkDayCountProps<T>,
): Promise<WorkDayCountResponse<T>> => {
    return await WorkDayCountCached(params);
};
